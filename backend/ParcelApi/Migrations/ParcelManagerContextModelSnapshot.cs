// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParcelApi.Data;

#nullable disable

namespace ParcelApi.Migrations
{
    [DbContext(typeof(ParcelManagerContext))]
    partial class ParcelManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("ParcelApi.Models.Bags.Bag", b =>
                {
                    b.Property<string>("BagId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BagType")
                        .HasColumnType("TEXT");

                    b.Property<string>("DestinationCountry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFinalised")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShipmentId")
                        .HasColumnType("TEXT");

                    b.HasKey("BagId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Bags");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ParcelApi.Models.Parcel", b =>
                {
                    b.Property<string>("ParcelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DestinationCountry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParcelBagBagId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("ParcelId");

                    b.HasIndex("ParcelBagBagId");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("ParcelApi.Models.Shipment", b =>
                {
                    b.Property<string>("ShipmentId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Airport")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DestinationCountry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFinalised")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShipmentId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("ParcelApi.Models.Bags.LetterBag", b =>
                {
                    b.HasBaseType("ParcelApi.Models.Bags.Bag");

                    b.Property<int?>("LetterCount")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Weight")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("LetterBag");
                });

            modelBuilder.Entity("ParcelApi.Models.Bags.ParcelBag", b =>
                {
                    b.HasBaseType("ParcelApi.Models.Bags.Bag");

                    b.ToTable("ParcelBag");
                });

            modelBuilder.Entity("ParcelApi.Models.Bags.Bag", b =>
                {
                    b.HasOne("ParcelApi.Models.Shipment", null)
                        .WithMany("Bags")
                        .HasForeignKey("ShipmentId");
                });

            modelBuilder.Entity("ParcelApi.Models.Parcel", b =>
                {
                    b.HasOne("ParcelApi.Models.Bags.ParcelBag", null)
                        .WithMany("Parcels")
                        .HasForeignKey("ParcelBagBagId");
                });

            modelBuilder.Entity("ParcelApi.Models.Bags.LetterBag", b =>
                {
                    b.HasOne("ParcelApi.Models.Bags.Bag", null)
                        .WithOne()
                        .HasForeignKey("ParcelApi.Models.Bags.LetterBag", "BagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParcelApi.Models.Bags.ParcelBag", b =>
                {
                    b.HasOne("ParcelApi.Models.Bags.Bag", null)
                        .WithOne()
                        .HasForeignKey("ParcelApi.Models.Bags.ParcelBag", "BagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParcelApi.Models.Shipment", b =>
                {
                    b.Navigation("Bags");
                });

            modelBuilder.Entity("ParcelApi.Models.Bags.ParcelBag", b =>
                {
                    b.Navigation("Parcels");
                });
#pragma warning restore 612, 618
        }
    }
}
